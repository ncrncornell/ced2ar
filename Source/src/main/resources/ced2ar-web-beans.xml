<?xml version="1.1" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.1.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd">

	<bean id="propertiesValidator"
		class="edu.ncrn.cornell.ced2ar.web.validators.PropertiesValidator" />
	<bean id="configurationProperties"
		class="edu.ncrn.cornell.ced2ar.api.data.ConfigurationProperties" />

	<!-- Main web app -->
	<bean id="config" class="edu.ncrn.cornell.ced2ar.api.data.Config">
		<property name="configInitialized" value="${configInitialized}" />
		<property name="baseXDB" value="${baseXDB}" />
		<property name="baseXReaderHash" value="${baseXReaderHash}" />
		<property name="baseXWriterHash" value="${baseXWriterHash}" />
		<property name="baseXAdminHash" value="${baseXAdminHash}" />

		<!-- Neo4j -->
		<property name="neo4jEndpoint" value="${neo4jEndpoint}" />
		<property name="neo4jHash" value="${neo4jHash}" />
	
		<!-- Bug report -->
		<property name="bugReportEnable" value="${bugReportEnable}" />

		<property name="timeout" value="${timeout}" />
		<property name="restricted" value="${restricted}" />
		<property name="port" value="${port}" />

		<property name="devFeatureProv" value="${devFeatureProv}" />
		<property name="devFeatureGoogleAnalytics" value="${devFeatureGoogleAnalytics}" />
		<property name="devFeatureEditing" value="${devFeatureEditing}" />

		<!-- Schema URIs -->
		<property name="schemaURI" value="${schemaURI}" />

		<!-- Passwords -->
		<property name="pwdIsRandom" value="${pwdIsRandom}" />
		<property name="pwdHash" value="${pwdHash}" />
		<property name="basexGenerateRandomPasswords" value="${basexGenerateRandomPasswords}" />

		<!-- Git info needs to be accessed out VersionControl bean -->
		<property name="gitEnabled" value="${gitEnabled}" />
		<property name="remoteRepoURL" value="${remoteRepoURL}" />
		
		<!-- Authentication -->
		<property name="authenticationType" value="${authenticationType}" />
		<!-- Authorization Storage -->
		<property name="authorizationStorage" value="${authorizationStorage}" />

		<!-- Crowdsourcing -->
		<property name="remoteURL" value="${remote.ced2ar.url}" />
		<property name="crowdSourcingRole" value="${crowdsourcing.role}" />
		<property name="openAccess" value="${openAccess}" />

		<!-- Access Mode: configure private servers -->
		<property name="accessMode" value="${accessMode}" />


		<!-- UI Navbar customization -->
		<property name="uiNavBarBrowseCodebook" value="${uiNavBarBrowseCodebook}" />
		<property name="uiNavBarBrowseCodebookLabel" value="${uiNavBarBrowseCodebookLabel}" />
		<property name="uiNavBarBrowseStudy" value="${uiNavBarBrowseStudy}" />
		<property name="uiNavBarBrowseStudyLabel" value="${uiNavBarBrowseStudyLabel}" />

		<!-- UI Tab customization (DDI tabs) -->
		<property name="uiNavTabDoc" value="${uiNavTabDoc}" />
		<property name="uiNavTabDocLabel" value="${uiNavTabDocLabel}" />
		<property name="uiNavTabStdy" value="${uiNavTabStdy}" />
		<property name="uiNavTabStdyLabel" value="${uiNavTabStdyLabel}" />
		<property name="uiNavTabFile" value="${uiNavTabFile}" />
		<property name="uiNavTabFileLabel" value="${uiNavTabFileLabel}" />
		<property name="uiNavTabData" value="${uiNavTabData}" />
		<property name="uiNavTabDataLabel" value="${uiNavTabDataLabel}" />
		<property name="uiNavTabOtherMat" value="${uiNavTabOtherMat}" />
		<property name="uiNavTabOtherMatLabel" value="${uiNavTabOtherMatLabel}" />

		<!-- data2ddi service -->
		<property name="data2ddiSvc" value="${data2ddiSvc}" />
		<property name="data2ddiUrl" value="${data2ddiUrl}" />


	</bean>

	<!-- Config location -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>classpath:ced2ar-web-config.properties</value>
		</property>
	</bean>

	<!-- Task Scheduler Configuration -->
	<task:scheduler id="scheduler" pool-size="4" />
	<task:annotation-driven scheduler="scheduler" />

	<!-- Git version control -->
	<bean id="versionControl" class="edu.ncrn.cornell.ced2ar.eapi.VersionControl">
		<property name="gitEnabled" value="${gitEnabled}" />
	</bean>

	<!-- PDF Generation -->
	<bean id="pdfGenerator" class="edu.ncrn.cornell.ced2ar.eapi.PDFGenerator"
		lazy-init="false">
		<property name="pdfEnabled" value="${pdfEnabled}" />
	</bean>

	<bean id="userService"
		class="edu.ncrn.cornell.ced2ar.security.idmgmt.service.impl.UserServiceImpl"
		lazy-init="false" />
	<bean id="roleService"
		class="edu.ncrn.cornell.ced2ar.security.idmgmt.service.impl.RoleServiceImpl"
		lazy-init="false" />
	<bean id="permissionService"
		class="edu.ncrn.cornell.ced2ar.security.idmgmt.service.impl.PermissionServiceImpl"
		lazy-init="false" />
	<bean id="rolePermissionService"
		class="edu.ncrn.cornell.ced2ar.security.idmgmt.service.impl.RolePermissionServiceImpl"
		lazy-init="false" />
	<bean id="userRoleService"
		class="edu.ncrn.cornell.ced2ar.security.idmgmt.service.impl.UserRoleServiceImpl"
		lazy-init="false" />
</beans>