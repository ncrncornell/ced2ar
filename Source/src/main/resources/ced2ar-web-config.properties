# Source File: Source/src/main/resources/ced2ar-web-config.properties
#
#  At the top of each section/group, there is a one line definition for most of the properties set in this file.
#
#  For additional help, see: 
#     Configuration Examples - https://github.com/ncrncornell/ced2ar/wiki/The-CED2AR-Configuration-Files#user-content-configuration-examples
#     CED2AR Configuration - https://github.com/ncrncornell/ced2ar/wiki/The-CED2AR-Configuration-Files
#     CED2AR wiki - https://github.com/ncrncornell/ced2ar/wiki
#     
#  Profiles (under Source/profiles).  Most initial/build property values are set in the config.properties files.  The profiles are:
#    localtemp - Server build profile.  default profile.
#    roots     - Local Binary/Desktop build profile.
#
#
# configInitialized -  Values: [ true | false ]

configInitialized=${config.initialized}

#
# BaseX
#
#  Base64 hashes of service accounts admin, writer and reader
#    Format is user:password. Encoding is padded with =, like basic authentication headers
#  Currently baseXDB required to be set with 'https', not 'http'  (May 2018 - NOT sure if this is accurate. Deployed servers are using http in config files.)
#
#  baseXDB - URL of BaseX war file
#  basexGenerateRandomPasswords - If the application randomizes the BaseX passwords on startup.  Values: [ true | false ]
#  baseXAllowChangePasswords - If the /config UI allows the admin to change BaseX passwords.  Values: [ true | false ]
#  MORE properties in this section. See file and/or Configuration Examples.

baseXDB=${basex.db}
baseXReaderHash=${basex.reader.hash}
baseXWriterHash=${basex.writer.hash}
baseXAdminHash=${basex.admin.hash}
basexGenerateRandomPasswords=${basex.generate.random.passwords}
baseXAllowChangePasswords=${basex.allow.change.passwords}

#
#  timeout - Timeout constant (for BaseX)

timeout=${timeout.constant}

#
# Crowdsourcing Config
#
#  crowdSourcingRole - Role system plays in crowdsourcing.  Values: [ master | wiki | none ] - Case sensitive (master,wiki)
#  remoteURL - URL of other system participating in the crowdsourcing. If master, then wiki URL.  If wiki, then master URL.

crowdSourcingRole = ${crowdsourcing.role}
remoteURL = ${remote.ced2ar.url}

#
# Port
#
#  port - Port on which the web application runs

port=${port}

#
# Restricted Environment
#
#  restricted - Switch to determine if application only uses local CSS/JS files.  Useful in a restricted environment/network.  Values: [ true | false ]

restricted=${env.restricted}

#
# Passwords
#
#  pwdIsRandom - Creates random admin password, and locks down entire application on startup.  Values: [ true | false ]
#  pwdHash - SHA1 hash of password for admin account under default authentication type

pwdIsRandom=${pwd.israndom}
pwdHash=${pwd.hash}

#
# Let anyone who can authenticate (e.g. with ORCID) assume ROLE_USER:
#
#  openAccess - If true, anybody who authenticates will be part of the the user role. ONLY works with when authentication.type=OAUTH2

openAccess=${open.access}

#
# Access Mode used to configure private servers
#
#  accessMode -   Values: [ AdminOnly | UserDefault ] - Case sensitive.  Default: UserDefault

accessMode=UserDefault

#
# Bug Report Settings
#
#  These properties can be modified using the Configuration Properties page (/ced2ar-web/config).
#
#  bugReportEnable - Turn on or off Bug Reporting Feature.  Values: [ true | false ]
#  Email to send the bugReport to. These properties are required if bug report is turned on (bugReportEnable=true).
#  MORE properties in this section. See file and/or Configuration Examples.

bugReportEnable=${bug.report.enable}

bugReportEmail=${bug.report.email}
bugReportSender=${bug.report.sender}
bugReportPwd=${bug.report.pwd}

#
# Development Features
#
#  devFeatureProv - Enable Provedance functionality.  Under development (? - 2016).  Values: [ true | false ]
#  devFeatureGoogleAnalytics - ?.  Values: [ true | false ]
#  devFeatureEditing - ?.
#  devFeatureCommentSystem - DEPRACATED - Added to deployed ced2ar-web-config.properties file when /config page is used.  Used in: PropertiesConfigurer.java

devFeatureProv=${dev.feature.prov}
devFeatureGoogleAnalytics=${dev.feature.google.analytics}
devFeatureEditing=${dev.feature.editing}

#
# Neo4j.  Part of Provedance functionality.  See devFeatureProv.
#
#  MORE properties in this section. See file and/or Configuration Examples.

neo4jEndpoint=${neo4j.endpoint}
neo4jHash=${neo4j.hash}

#
# Schema Locations
#
#  schemaURI - Location of the DDI 2.5.NCRN schemas (http://www.ncrn.cornell.edu/docs/ddi/2.5.NCRN/schemas/codebook.xsd). Change it if you want to use your own or you make a local copy.

schemaURI=${schema.uri}

#
# PDF generation of codebooks on a set schedule
#
#  pdfEnabled - Generate PDF files for codebooks on a set schedule.  Values: [ true | false ]
#  pdfGenerationTaskCronExpression - Cron Expression

pdfEnabled=${pdf.enabled}
pdfGenerationTaskCronExpression=${pdf.generator.scheduled.task.cron.interval}

#
# Logging
#
#  Property values are set in the profiles (localtemp and roots) config.properties files.
#  Properties used in Source/src/main/resources/log4j.properties
#

#
# Version control
#
#  gitEnabled - Values: [ true | false ]
#  The following properties need not be defined if git.enabled is set to false
#  MORE properties in this section. See file and/or Configuration Examples.

gitEnabled=${git.enabled}

remoteRepoURL=${remote.repo.url}
remoteBranch=${remote.branch}
remoteUser=${remote.user}
remotePass=${remote.pass}
localBranch=${local.branch}
numberOfCommitsToPushRemote=${number.of.commits.to.push.remote}
gitRemotePushCronExpression=${git.remote.push.cron.expression}
gitLocalCommitCronExpression=${git.local.commit.cron.expression}

#
# Authentication
#
#  authenticationType - Authentication type.  Values: [ OPENID | OAUTH2 | DEFAULT ]  OPENID and OAUTH2 require additional configuration.
#  authorizationStorage - Values: [ PROPERTIES_FILE | BASEX_XML | NONE ] - Case Insensitive (PROPERTIES_FILE,BASEX_XML)

authenticationType=${authentication.type}
authorizationStorage=${authorization.storage}

#
# OAUTH2 Configuration, common
#
#  authCode - Used to setGrantType for OAuth 2.0 requests.  Values: [ authorization_code ]  Required IF authenticationType=OAUTH2

authCode=${oauth2.authCode}

#
# OAUTH2 Providers
#
#  supportedOauth2Providers - List of OAuth 2.0 providers you will use for authorization.  Values: [ GOOGLE | GOOGLE ORCID | ORCID ] Case sensitive.  Required IF authenticationType=OAUTH2

supportedOauth2Providers=${supported.oauth2.providers}

#
# OAUTH2 Provider Configuration - Google.   These properties are required IF supportedOauth2Providers contains GOOGLE
#
#  googleDefaultFilterURL -  Values: [ google_oauth2_login ]
#  googleInfoReq -  Values: [ email ]
#  MORE properties in this section. See file and/or Configuration Examples.

googleDefaultFilterURL=${google.oauth2.defaultFilterURL}
googleClientId=${google.oauth2.clientId}
googleClientSecret=${google.oauth2.clientSecret}
googleAccessTokenURL=${google.oauth2.accessTokenURL}
googleAuthURL=${google.oauth2.authURL}
googleTokenURL=${google.oauth2.tokenURL}
googlePreEstabledURL=${google.oauth2.preEstabledURL}
googleInfoReq=${google.oauth2.infoReq}
googlePersonInfoURL=${google.oauth2.personInfoURL}

#
# OAUTH2 Provider Configuration - ORCID.  These properties are required IF supportedOauth2Providers contains ORCID
#
#  orcidDefaultFilterURL -  Values: [ orcid_oauth2_login ]
#  orcidInfoReq -  Values: [ /authenticate ]
#  MORE properties in this section. See file and/or Configuration Examples.

orcidDefaultFilterURL=${orcid.oauth2.defaultFilterURL}
orcidClientId=${orcid.oauth2.clientId}
orcidClientSecret=${orcid.oauth2.clientSecret}
orcidAccessTokenURL=${orcid.oauth2.accessTokenURL}
orcidAuthURL=${orcid.oauth2.authURL}
orcidTokenURL=${orcid.oauth2.tokenURL}
orcidPreEstabledURL=${orcid.oauth2.preEstabledURL}
orcidInfoReq=${orcid.oauth2.infoReq}
orcidPersonInfoURL=${orcid.oauth2.personInfoURL}

#
# OAUTH2 Role and User Lists (Authorized Users).
#
#  There are two roles: ROLE_USER, ROLE_ADMIN
#
#  If you are using OAuth2, you need to enter email address, comma separated, to add users to each group.
#
#  Inital proerty values, for authorized.ROLE_USER.users and authorized.ROLE_ADMIN.users, are set in the profiles config.properties files.  Inital values are empty/blank.
#  At build time, Source/src/main/resources/ced2ar-user-config.properties uses the inital values to populate those same properties in: 
#    Source/target/ced2ar-web/WEB-INF/classes/ced2ar-user-config.properties, Source/target/classes/ced2ar-user-config.properties
#  At deployment, ced2ar-web/WEB-INF/classes/ced2ar-user-config.properties is created.
#
#  AFTER deployment, edit the deployed ced2ar-web/WEB-INF/classes/ced2ar-user-config.properties file to add users to either role.
#

#
# OBSOLETE - Name of web application that the editing API runs under. Needs to be local.
#Obsolete
#eAPI=${e.api}

#
# UI Navigation Customization
#
#  The uiNav* properties are used to display/hide navigation tabs and the names of those tabs.  Each ui nav item has two properties:
#    1) Setting a ui nav (bar/tab) item to true displays that tab. Setting it to false removes that tab.
#    2) The *Label (.label) property can be set to any name you want to use on your environment.
#
#  These properties can be modified using the Configuration Properties page (/ced2ar-web/config).
#
#  UI Navbar customization - These are top level navigation items that can be set.
#
#    uiNavBarBrowseCodebook - If true, displays the Browse by Codebook tab.  Values: [ true | false ]  Default: true
#    uiNavBarBrowseCodebookLabel - Tab label. Default: Browse by Codebook
#    uiNavBarBrowseStudy - If true, displays the Browse by Study tab.  Values: [ true | false ]  Default: true
#    uiNavBarBrowseStudyLabel - Tab label. Default: Browse by Study

uiNavBarBrowseCodebook=${ui.nav.bar.browse.codebook}
uiNavBarBrowseCodebookLabel=${ui.nav.bar.browse.codebook.label}
uiNavBarBrowseStudy=${ui.nav.bar.browse.study}
uiNavBarBrowseStudyLabel=${ui.nav.bar.browse.study.label}

#
#  UI Navigation Tab properties for Study subtabs (aka DDI 2.5 tabs) - Required IF uiNavBarBrowseStudy=true  Used for the ced2ar-web/codebooks/<codebook>/v/<version>/study page.
#
#    uiNavTabDoc - If true, displays the Doc tab.  Values: [ true | false ]  Default: true
#    uiNavTabDocLabel - Tab label. Default: Doc
#    uiNavTabStdy - If true, displays the Study tab.  Values: [ true ]  Default: true. (Cannot be set to false.)
#    uiNavTabStdyLabel - Tab label. Default: Study
#    uiNavTabFile - If true, displays the File tab.  Values: [ true | false ]  Default: true
#    uiNavTabFileLabel - Tab label. Default: File
#    uiNavTabData - If true, displays the Data tab.  Values: [ true | false ]  Default: true
#    uiNavTabDataLabel - Tab label. Default: Data
#    uiNavTabOtherMat - If true, displays the Other Material tab.  Values: [ true | false ]  Default: false  Currently, CED2AR does not expose any /otherMat elements so this is turned off.
#    uiNavTabOtherMatLabel - Tab label. Default: Other Material

uiNavTabDoc=${ui.nav.tab.doc}
uiNavTabDocLabel=${ui.nav.tab.doc.label}
uiNavTabStdy=${ui.nav.tab.stdy}
uiNavTabStdyLabel=${ui.nav.tab.stdy.label}
uiNavTabFile=${ui.nav.tab.file}
uiNavTabFileLabel=${ui.nav.tab.file.label}
uiNavTabData=${ui.nav.tab.data}
uiNavTabDataLabel=${ui.nav.tab.data.label}
uiNavTabOtherMat=${ui.nav.tab.otherMat}
uiNavTabOtherMatLabel=${ui.nav.tab.otherMat.label}

#
# Services
#
#  These properties can be modified using the Configuration Properties page (/ced2ar-web/config).
#
#  data2ddi service  (ced2ardata2ddi.war).  Used by Upload.java's convertData method.
#
#    Defaults to run in the same server and tomcat container as cedar-web and BaseX (localhost).
#    Setting data2ddiSvc to true displays the Create tab.  Setting it to false disables/hides the tab.
#
#    data2ddiSvc - If true, displays the Create tab on the Manage codebooks page.  Values: [ true | false ]  Default: true
#    data2ddiUrl -  URL for the data2ddi service.  The default to run in the same server and tomcat container as ced2ar-web and BaseX (localhost).

data2ddiSvc=${data2ddi.svc}
data2ddiUrl=${data2ddi.url}
