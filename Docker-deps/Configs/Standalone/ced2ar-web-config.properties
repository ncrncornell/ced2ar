configInitialized=true
# Currently baseXDB required to be set with 'https', not 'http'
baseXDB=http://localhost:8080/BaseX/
baseXReaderHash=cmVhZGVyOnJlYWRlcg==
baseXWriterHash=d3JpdGVyOndyaXRlcg==
baseXAdminHash=YWRtaW46YWRtaW4=
basexGenerateRandomPasswords=false
baseXAllowChangePasswords=true

neo4jEndpoint=
neo4jHash=
 
#Email to send the bugReport to
bugReportEnable=false
bugReportEmail=${bug.report.email}
bugReportSender=${bug.report.sender}
bugReportPwd=${bug.report.pwd}

#Port on which the web application runs
port=8080
		
#Switch to determine if in a restricted environment 
restricted=false
	
#Timeout constant
timeout=15000

#
#Passwords
#
pwdIsRandom=false
pwdHash=d033e22ae348aeb5660fc2140aec35850c4da997
# Let anyone who can authenticate (e.g. with ORCID) assume ROLE_USER:
openAccess=false

#
# Access Mode: configure private servers
#
accessMode=UserDefault


#Features
devFeatureProv=false
devFeatureGoogleAnalytics=false
devFeatureEditing=true

#Crowdsourcing Config
remoteURL = https://www2.ncrn.cornell.edu/ced2ar-web
crowdSourcingRole = none

#Schema locations
schemaURI=http://www.ncrn.cornell.edu/docs/ddi/2.5.NCRN/schemas/codebook.xsd

#PDF generation
pdfGenerationTaskCronExpression=0 59 23 * * *
pdfEnabled=true

#Version control
gitEnabled=false
remoteRepoURL=
remoteBranch=
remoteUser=
remotePass=
localBranch=
numberOfCommitsToPushRemote=2
gitRemotePushCronExpression=59 59 23 * * *
gitLocalCommitCronExpression=10 * * * * *

authenticationType=DEFAULT
supportedOauth2Providers=${supported.oauth2.providers}
authorizationStorage=properties_file

#OAUTH2 Configuration
authCode=${oauth2.authCode}

googleDefaultFilterURL=${google.oauth2.defaultFilterURL}
googleClientId=${google.oauth2.clientId}
googleClientSecret=${google.oauth2.clientSecret}
googleAccessTokenURL=${google.oauth2.accessTokenURL}
googleAuthURL=${google.oauth2.authURL}
googleTokenURL=${google.oauth2.tokenURL}
googlePreEstabledURL=${google.oauth2.preEstabledURL}
googleInfoReq=${google.oauth2.infoReq}
googlePersonInfoURL=${google.oauth2.personInfoURL}

orcidDefaultFilterURL=${orcid.oauth2.defaultFilterURL}
orcidClientId=${orcid.oauth2.clientId}
orcidClientSecret=${orcid.oauth2.clientSecret}
orcidAccessTokenURL=${orcid.oauth2.accessTokenURL}
orcidAuthURL=${orcid.oauth2.authURL}
orcidTokenURL=${orcid.oauth2.tokenURL}
orcidPreEstabledURL=${orcid.oauth2.preEstabledURL}
orcidInfoReq=${orcid.oauth2.infoReq}
orcidPersonInfoURL=${orcid.oauth2.personInfoURL}

#Name of web application that the editing API runs under. Needs to be local.
#Obsolete
#eAPI=${e.api}

#UI Navbar customization
uiNavBarBrowseCodebook=true
uiNavBarBrowseCodebookLabel=Browse by Codebook
uiNavBarBrowseStudy=true
uiNavBarBrowseStudyLabel=Browse by Study

#UI Tab customization (DDI tabs)  .
uiNavTabDoc=true
uiNavTabDocLabel=Doc
uiNavTabStdy=true
uiNavTabStdyLabel=Study
uiNavTabFile=true
uiNavTabFileLabel=File
uiNavTabData=true
uiNavTabDataLabel=Data
uiNavTabOtherMat=false
uiNavTabOtherMatLabel=Other Material

#data2ddi service.
data2ddiSvc=true
data2ddiUrl=http://localhost:8080/ced2ardata2ddi/data2ddi
